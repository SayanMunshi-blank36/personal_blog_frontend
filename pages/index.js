import Head from "next/head";
import Intro from "../components/Intro";
import CategoryFeaturedBlogs from "../components/CategoryFeaturedBlogs";
import styles from "../styles/Home.module.css";

export default function Home({
  categories,
  techBlogs,
  otakuBlogs,
  travelBlogs,
}) {
  return (
    <div>
      <Head>
        <title>Sayan Munshi</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Intro />
      {categories.map((category) => {
        let blogs;

        if (category.attributes.name === "Tech") blogs = techBlogs;
        else if (category.attributes.name === "Otaku") blogs = otakuBlogs;
        else if (category.attributes.name === "Travel") blogs = travelBlogs;

        return (
          <CategoryFeaturedBlogs
            key={category.id}
            category={category}
            blogs={blogs}
          />
        );
      })}
    </div>
  );
}

export async function getServerSideProps(context) {
  const headers = {
    Authorization: `Bearer ${process.env.BEARER_TOKEN}`,
  };

  let categories;
  let techBlogs;
  let otakuBlogs;
  let travelBlogs;

  const categoryArrRes = await fetch(
    `${process.env.API_URL}api/categories?populate=*`,
    {
      headers: headers,
    }
  );

  const techBlogsRes = await fetch(
    `${process.env.API_URL}api/articles?sort=createdAt%3Adesc&populate=*&filters[category][name]=Tech&pagination[limit]=5`,
    {
      headers: headers,
    }
  );

  const otakuBlogsRes = await fetch(
    `${process.env.API_URL}api/articles?sort=createdAt%3Adesc&populate=*&filters[category][name]=Otaku&pagination[limit]=5`,
    {
      headers: headers,
    }
  );

  const travelBlogsRes = await fetch(
    `${process.env.API_URL}api/articles?sort=createdAt%3Adesc&populate=*&filters[category][name]=Travel&pagination[limit]=5`,
    {
      headers: headers,
    }
  );

  const categoryArr = await categoryArrRes.json();
  const techBlogsArr = await techBlogsRes.json();
  const otakuBlogsArr = await otakuBlogsRes.json();
  const travelBlogsArr = await travelBlogsRes.json();

  categories = categoryArr.data;
  techBlogs = techBlogsArr.data;
  otakuBlogs = otakuBlogsArr.data;
  travelBlogs = travelBlogsArr.data;

  return {
    props: { categories, techBlogs, otakuBlogs, travelBlogs }, // will be passed to the page component as props
  };
}
